---
import type { Curso, APICursos } from "../../utils/curso"; // <-- tu ruta real

// Ejemplo de tipo para el array que retorna getStaticPaths
interface StaticPath {
  params: { id: string };
  props: { curso: Curso };
}

// getStaticPaths: genera las rutas estáticas
export async function getStaticPaths(): Promise<StaticPath[]> {
  const res = await fetch("https://admin.nicolascarrillo.com/api/cursos");
  const data = (await res.json()) as APICursos;

  // data.docs es un array de Curso[]
  return data.docs.map((curso) => ({
    params: { id: curso.slug },
    props: { curso },
  }));
}

// Definimos los tipos de los parámetros y retorno de getStaticProps
interface StaticPropsParams {
  params: { id: string };
  props: { curso: Curso };
}

export async function getStaticProps({
  params,
  props,
}: StaticPropsParams): Promise<{ props: { curso: Curso } }> {
  // Si necesitas hacer otra llamada fetch, hazla aquí.
  // Si no, solo retornas lo que ya obtuviste en getStaticPaths:
  return {
    props: {
      curso: props.curso,
    },
  };
}

// Obtenemos las props tipadas
const { curso } = Astro.props as { curso: Curso };

// Desestructuramos
const { title, coverImage, imagenesAdicionales, descripcionCurso } = curso;
---

<!----------------------------------------------->
<template>
  <h1>{title}</h1>

  <!-- Ejemplo de imagen de portada -->
  {
    coverImage && (
      <img
        src={coverImage.url}
        alt={coverImage.filename}
        style="max-width: 200px;"
      />
    )
  }

  <!-- Ejemplo de descripción -->
  {descripcionCurso && <p>{descripcionCurso}</p>}

  <!-- Ejemplo de imágenes adicionales -->
  {
    imagenesAdicionales && imagenesAdicionales.length > 0 && (
      <section>
        {imagenesAdicionales.map((item) => {
          // TypeScript ya sabrá que item es de tipo ImagenAdicional
          const { id, imagen } = item;
          return (
            // Nota: en Astro HTML nativo, 'key' no existe como en React,
            //       puedes usar un contenedor o data-attribute.
            <div data-key={id}>
              <img
                src={imagen.url}
                alt={imagen.filename}
                style="max-width: 150px;"
              />
            </div>
          );
        })}
      </section>
    )
  }
</template>
